version: '3.8'

services:
  # Servicio de PostgreSQL con PostGIS
  db:
    image: postgis/postgis:15-3.4
    container_name: marketplace_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Servicio de la API FastAPI
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: marketplace_api
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      APP_NAME: ${APP_NAME}
      APP_VERSION: ${APP_VERSION}
      DEBUG: ${DEBUG}
      API_V1_PREFIX: ${API_V1_PREFIX}
      SECRET_KEY: ${SECRET_KEY}
      WEBHOOK_API_KEY: ${WEBHOOK_API_KEY}
    ports:
      - "8004:8000"
    volumes:
      - ./app:/code/app
      - ./migrations:/code/migrations
      - ./alembic.ini:/code/alembic.ini
      - ./tests:/code/tests
      - ./pytest.ini:/code/pytest.ini
      - ./requirements-dev.txt:/code/requirements-dev.txt
      - persistent_uploads:/app/uploads
    depends_on:
      db:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

volumes:
  postgres_data:
    driver: local
  persistent_uploads:
    driver: local
