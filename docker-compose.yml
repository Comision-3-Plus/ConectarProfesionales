services:
  # Base de datos PostgreSQL - COMENTADO: usando Supabase remoto en su lugar
  # Si quieres PostgreSQL local, descomenta esto y cambia POSTGRES_HOST=db en .env
  # db:
  #   image: postgis/postgis:15-3.3
  #   container_name: marketplace_db
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER:-postgres}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
  #     POSTGRES_DB: ${POSTGRES_DB:-postgres}
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #     - ./init.sql:/docker-entrypoint-initdb.d/init.sql
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -h localhost -p 5432 -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-postgres}"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5

  # Servicio de la API FastAPI (conectado a Supabase)
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: marketplace_api
    restart: unless-stopped
    dns:
      - 8.8.8.8
      - 8.8.4.4
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_HOST: ${POSTGRES_HOST:-localhost}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      APP_NAME: ${APP_NAME:-Marketplace}
      APP_VERSION: ${APP_VERSION:-0.0.0}
      DEBUG: ${DEBUG:-False}
      API_V1_PREFIX: ${API_V1_PREFIX:-/api/v1}
      SECRET_KEY: ${SECRET_KEY:-changeme}
      WEBHOOK_API_KEY: ${WEBHOOK_API_KEY:-}
      SUPABASE_URL: ${SUPABASE_URL:-}
      SUPABASE_KEY: ${SUPABASE_KEY:-}
      MERCADOPAGO_ACCESS_TOKEN: ${MERCADOPAGO_ACCESS_TOKEN:-}
      FIREBASE_CREDENTIALS_PATH: ${FIREBASE_CREDENTIALS_PATH:-}
    ports:
      - "8004:8000"
    volumes:
      - ./app:/code/app
      - ./migrations:/code/migrations
      - ./alembic.ini:/code/alembic.ini
      - ./tests:/code/tests
      - ./pytest.ini:/code/pytest.ini
      - ./requirements-dev.txt:/code/requirements-dev.txt
      - persistent_uploads:/app/uploads
    # depends_on: db removed - using Supabase remote database instead
    command: >
      sh -c "sleep 5 &&
             alembic upgrade head &&
             uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"

  # Servicio del Frontend Next.js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: marketplace_frontend
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8004
      NODE_ENV: development
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - api
    command: npm run dev

volumes:
  postgres_data:
    driver: local
  persistent_uploads:
    driver: local
