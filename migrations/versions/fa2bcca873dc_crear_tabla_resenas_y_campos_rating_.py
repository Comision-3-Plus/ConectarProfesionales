"""crear_tabla_resenas_y_campos_rating_profesional

Revision ID: fa2bcca873dc
Revises: af43297f6357
Create Date: 2025-10-19 17:48:34.638282

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fa2bcca873dc'
down_revision: Union[str, None] = 'af43297f6357'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('resenas',
    sa.Column('trabajo_id', sa.UUID(), nullable=False, comment='ID del trabajo calificado (único, un trabajo solo puede tener una reseña)'),
    sa.Column('cliente_id', sa.UUID(), nullable=False, comment='ID del cliente que deja la reseña'),
    sa.Column('profesional_id', sa.UUID(), nullable=False, comment='ID del profesional que recibe la reseña'),
    sa.Column('rating', sa.Integer(), nullable=False, comment='Calificación de 1 a 5 estrellas'),
    sa.Column('texto_resena', sa.Text(), nullable=True, comment='Texto opcional de la reseña'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Identificador único universal'),
    sa.Column('fecha_creacion', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Fecha de creación del registro'),
    sa.Column('fecha_actualizacion', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Fecha de última actualización del registro'),
    sa.CheckConstraint('rating >= 1 AND rating <= 5', name='check_rating_rango'),
    sa.ForeignKeyConstraint(['cliente_id'], ['usuarios.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['profesional_id'], ['profesionales.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['trabajo_id'], ['trabajos.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index('idx_resena_cliente', 'resenas', ['cliente_id'], unique=False)
    op.create_index('idx_resena_profesional_rating', 'resenas', ['profesional_id', 'rating'], unique=False)
    op.create_index(op.f('ix_resenas_cliente_id'), 'resenas', ['cliente_id'], unique=False)
    op.create_index(op.f('ix_resenas_profesional_id'), 'resenas', ['profesional_id'], unique=False)
    op.create_index(op.f('ix_resenas_trabajo_id'), 'resenas', ['trabajo_id'], unique=True)
    op.create_unique_constraint(None, 'ofertas', ['id'])
    
    # Agregar columnas con valores por defecto y permitir NULL temporalmente
    op.add_column('profesionales', sa.Column('rating_promedio', sa.Numeric(precision=3, scale=2), nullable=True, comment='Rating promedio denormalizado (evita calcular AVG en cada búsqueda)'))
    op.add_column('profesionales', sa.Column('total_resenas', sa.Integer(), nullable=True, comment='Total de reseñas recibidas (denormalizado para performance)'))
    
    # Actualizar los valores NULL a 0
    op.execute("UPDATE profesionales SET rating_promedio = 0.00 WHERE rating_promedio IS NULL")
    op.execute("UPDATE profesionales SET total_resenas = 0 WHERE total_resenas IS NULL")
    
    # Ahora hacer las columnas NOT NULL
    op.alter_column('profesionales', 'rating_promedio', nullable=False)
    op.alter_column('profesionales', 'total_resenas', nullable=False)
    
    op.create_unique_constraint(None, 'trabajos', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'trabajos', type_='unique')
    op.drop_column('profesionales', 'total_resenas')
    op.drop_column('profesionales', 'rating_promedio')
    op.drop_constraint(None, 'ofertas', type_='unique')
    op.drop_index(op.f('ix_resenas_trabajo_id'), table_name='resenas')
    op.drop_index(op.f('ix_resenas_profesional_id'), table_name='resenas')
    op.drop_index(op.f('ix_resenas_cliente_id'), table_name='resenas')
    op.drop_index('idx_resena_profesional_rating', table_name='resenas')
    op.drop_index('idx_resena_cliente', table_name='resenas')
    op.drop_table('resenas')
    # ### end Alembic commands ###
